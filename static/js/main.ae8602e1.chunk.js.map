{"version":3,"sources":["components/PairCard.js","data/actions.js","components/CountDown/CountDown.js","components/CountDown/index.js","components/CardsNew/CardsNew.js","data/axios.js","data/actions/api.js","components/CardsNew/index.js","history.js","components/ScorePage/index.js","components/Header.js","components/HeaderHome.js","components/WelcomePage/index.js","components/Footer.js","components/App/App.js","components/App/index.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["connect","state","cards","dispatch","handleMultiClick","type","index","item","onCard","styles","margin","width","height","backgroundImage","counter","url","backgroundSize","backgroundRepeat","backgroundPosition","display","opacity","paired","border","padding","borderRadius","onClick","clicked","filter","pairs","length","allowClick","style","CountDown","props","timer","seconds","startTimer","bind","countDown","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","this","selectedOption","setState","setTimerInterval","previousProps","resetTimer","clearInterval","setInterval","warning","color","timeExpired","to","className","Component","CardsNew","getDataSet","handleCardClick","score","handleShuffle","handleScore","playername","useState","loading","setLoading","useEffect","findPair","newArr","push","map","name","console","log","newArr2","updateScore","arr2","handleClick","newCards","clicker","class","key","id","axios","create","baseURL","headers","Accept","getData","get","then","data","createBrowserHistory","valueShuff","arrayShuff","shuffleCards","valueC","valuePair","ValueS","cardClick","scoreChange","updateClick","scoreVal","handleReset","Header","HeaderHome","handleOptionChange","selectedDiff","updateDifficulty","handleFormSubmit","valuePlayerName","updatePlayerName","setClicker","inputValueP","setInputValueP","src","onSubmit","e","preventDefault","placeholder","value","onChange","currentTarget","checked","event","target","Footer","App","exact","path","React","tooManyClicks","shuffle","array","i","j","random","temp","initial","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","count","counterIncrease","setQuestionsReducer","clickUpdate","scoreIncr","diffclty","updPlyrNm","clickRchecker","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.ae8602e1.chunk.js","sourcesContent":["import React, { useState, Component, useEffect } from \"react\";\n\nimport { connect } from 'react-redux';\n\nimport {updateTooMNYClicks} from '../data/actions';\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        // srcImage: state.images[(state.counter -1)].url,\n        cards:state.cards,\n        // allowClick:(state.cards.counter.length - state.cards.paired.length) < 3,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        \n        handleMultiClick:()=>{\n            dispatch (updateTooMNYClicks())\n        },\n}\n}\n\nconst PairCard =({index,item, onCard,cards,handleMultiClick}) => {\n\n    const allowClick = () => {\n        let clicked=cards.filter(item => item.counter == true);\n        let pairs=cards.filter(item => item.paired == true);\n        return (clicked.length-pairs.length < 4);\n    }\n\n    const styles= {\n            margin: '20px',\n            width: '200px',\n            height: '200px',\n            backgroundImage: (item.counter === false ? \"url(\" + \"https://i.ya-webdesign.com/images/pear-clipart-yellow-pear-23.png\" + \")\": `url(\"${item.url}\")`),\n            backgroundSize: 'contain',\n            backgroundRepeat  : 'no-repeat',\n            backgroundPosition: 'center',\n            display: 'inline-block',\n            opacity: (item.paired === true ? '0': '1'),\n            border: 'grey solid 2px',\n            padding: '5px',\n            borderRadius:'3px',\n            \n          }\n\n    return (\n        <>\n            <p  onClick={allowClick() ? () => onCard(index):handleMultiClick } style={styles}>\n                {/* {item.counter === false ? 'Clicked!!!!' : 'Not Clicked!!!!'}{item.name} */}\n            </p>\n\n        </>\n    );\n    }\n    \n    export default connect(mapStateToProps,mapDispatchToProps)(PairCard);\n\n    \n\n    // onClick={() => onCard(index)}","export const shuffleCards = (valueShuff) => {\n    return {\n      type: \"SHUFFLE\",\n      arrayShuff:valueShuff,\n    }; \n  };\n\n  export const updateClick = (valueC,valuePair,ValueS) => {\n    return {\n      type: 'CLICKSTATUS', \n      cardClick: valueC,\n      valuePair:valuePair,\n      scoreChange:ValueS,\n    }; \n  };\n  \n\n  export const reset = () => {\n    return {\n      type: \"RESET\",\n    }; \n  };\n  \n\n  export const updateScore = (scoreVal) => {\n    return {\n      type: 'SCOREUPDATE', \n      scoreVal: scoreVal,\n    }; \n  };\n  \n  export const updateDifficulty = (selectedDiff) => {\n    return {\n      type: 'DIFFICULTY', \n      selectedDiff: selectedDiff,\n    }; \n  }; \n\n  export const updatePlayerName = (valuePlayerName) => {\n    return {\n      type: 'PLAYERNAME', \n      valuePlayerName: valuePlayerName,\n    }; \n  }; \n\n  export const updateTooMNYClicks = () => {\n    return {\n      type: \"CLICKERCHECKER\",\n    }; \n  };\n\n\n  ","import React, { Component } from \"react\";\n\nimport { Redirect } from 'react-router-dom';\n\nclass CountDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { timer:null, seconds: 10 };\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n  \n  secondsToTime(secs){\n    let hours = Math.floor(secs / (60 * 60));\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n    let obj = {\n      \"h\": hours,\n      \"m\": minutes,\n      \"s\": seconds\n    };\n    return obj;\n  }\n\n  setTimerInterval(){\n    if(this.props.selectedOption === \"easy\"){\n      return this.setState({\n        seconds: 120,\n      });\n    } else if (this.props.selectedOption === \"modest\"){\n      return this.setState({\n        seconds: 90,\n      });\n    }\n    else if (this.props.selectedOption === \"hard\"){\n      return this.setState({\n        seconds: 60,\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.setTimerInterval();\n    this.startTimer();\n  }\n\n  componentDidUpdate(previousProps){\n    if(this.props.counter!== previousProps.counter){\n      this.resetTimer();\n    }\n  }\n  \n  startTimer() {\n    clearInterval(this.state.timer);\n    this.setState({timer:setInterval(this.countDown, 1000)});\n    \n  }\n  countDown() {\n    let seconds = this.state.seconds - 1;\n    this.setState({\n      seconds: seconds,\n    });\n    if (seconds == 0) { \n    }\n  }\n  timeExpired(){\n    return this.state.seconds === 0? this.resetTimer(): null;\n    // return this.state.seconds === 0? <Redirect to=\"/endgame\"/>: null;\n    // return this.state.seconds === 0? this.props.timerExpired(this.resetTimer()): null;\n  }\n\n  resetTimer(){\n\n    this.setState({ seconds: 10 });\n    this.startTimer();\n  }\n\n  render() {\n    let timer= this.state.seconds;\n    let warning = (timer <= 5 ? { color: 'red' } : { color: 'rgb(246, 170, 25)' });\n    this.timeExpired();\n    // console.log(this.props);\n    // {(updateScore() > 3)? <Redirect to=\"/endgame\"/>:null}\n    if (this.state.seconds === 0) {\n      return <Redirect to='/endgame'/>\n    }\n\n    return(\n      \n      <div>\n        <h2 className=\"countdown\" style={warning}>{timer}</h2>\n      </div>\n    );\n  }\n}\n\nexport default CountDown\n\n\n\n\n\n\n\n// // Create a class based component with this.state\n// // Add a progress or timeRemaining value to this.state\n// // Update the JSX to use that value \n// // In componentDidMount  create a setInterval that updates the appropriate value with setState\n// // Technically speaking you should cancel the timer on componentWillUnmount\n// // You shouldn't need any document. anything.\n// // I'd do it with a class rather than Hooks, because it's a bit simpler.\n\n","import { connect } from 'react-redux';\nimport CountDown from './CountDown';\n// import { increment } from '../CountDown';\n\nconst mapStateToProps = (state) =>{\n\n    return {\n        counter: state.counter\n    }\n\n}\n\n\n// const mapDispatchToProps = (dispatch) => {\n\n//     return {\n//         timerExpired: () => {\n//             dispatch(increment())\n//         }\n//     }\n// }\n\nexport default connect(mapStateToProps, null)(CountDown);\n","import React, { useState, Component, useEffect } from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nimport { Redirect } from 'react-router-dom';\n\nimport PairCard from '../PairCard';\n\nimport CountDown from \"../CountDown/\";\n\nconst CardsNew = ({\n    getDataSet,\n    cards,\n    score,\n    handleShuffle,\n    handleCardClick,\n    handleScore,\n    selectedOption,\n    playername,\n}) => {\n\n    const [loading,setLoading]= useState(true)\n   \n    useEffect(() => {\n        getDataSet();\n        setLoading(false);\n        // handleShuffle(shuffle());\n    }, []);\n    \n    const shuffle = () => {\n        let arrShuff = [...cards]\n        arrShuff.sort(() => Math.random() - 0.5)\n        return arrShuff\n    };\n\n    const clicker = (index) => {\n        const newCards = [...cards];\n        newCards[index] = { ...cards[index] }\n        newCards[index].counter = !cards[index].counter;\n        return newCards\n    };\n\n\n    const findPair = () => {\n        //find new clicked items\n        let newArr = [];\n        cards.filter((item, index) => {\n            if (item.counter === true && item.paired === false) {\n                return newArr.push(item);\n            }\n        });\n        //if those new clicked items have same name then set item.paired = true\n        if (newArr.length >= 2 && newArr.length < 3) {\n            cards.map((item, index) => {\n                if (item.counter === true && (newArr[0].name === newArr[1].name)) {\n                    return item.paired = true;\n                } else\n                    return item;\n            })\n        };\n        console.log(newArr);\n\n        let newArr2 = [];\n        cards.filter((item, index) => {\n            if (item.counter === true) {\n                return newArr2.push(item);\n            }\n        });\n\n        if (newArr2.length >= 3) {\n            cards.map((item, index) => {\n                if (item.counter === true) {\n                    return item.counter = !item.counter;\n                } else\n                    return item;\n            })\n        };\n\n\n        return cards;\n    }\n\n    console.log(\"pairs\", findPair());\n\n\n    \n\n    const updateScore = () => {\n        let arr2 = [];\n        cards.filter((item, index) => {\n            if (item.paired === true) {\n                return arr2.push(item.paired);\n            }\n        });\n\n        let tot = (arr2.length / 2)\n        return tot;\n\n    }\n\n    const handleClick = (index) => {\n        // index.preventDefault();\n        handleCardClick(clicker(index), findPair());\n        // findPair();\n        handleScore(updateScore());\n    };\n\n\n    console.log(\"score\", updateScore())\n\n\n    return (\n        <>\n            {/* <pre>\n            {JSON.stringify(this.state.cards, null, 2)}\n        </pre> */}\n            {(updateScore() > 3)? <Redirect to=\"/endgame\"/>:null}\n            <div class=\"score\">\n                {playername}'s Score:{updateScore()}\n            </div>\n            {loading? <div><h1>Loading......</h1></div>:\n            <div className=\"loaded-items\">\n                <div class=\"timer\">\n                    <CountDown selectedOption= {selectedOption}/>\n                </div>\n                <div class=\"card-deck\">\n                    {cards.map((item, index) => (\n                        <PairCard \n                            key={item.id} \n                            onCard={() => handleClick(index)} \n                            cards={cards} \n                            item={item} \n                            index={index} />\n                    ))}\n                </div>\n            </div>}\n            <Link to=\"/endgame\">\n                <button type=\"submit\" className=\"btn btn-outline-dark\" onClick={handleScore(updateScore())}> End Game </button>\n            </Link>\n\n\n        </>\n    );\n}\n\nexport default CardsNew;\n\n\n        // if (newArr2.length >= 2) {\n        //     setTimeout(() => {\n        //         cards.map((item, index) => {\n        //             if (item.counter === true) {\n        //                 return item.counter = !item.counter;\n        //             } else\n        //                 return item;\n        //         })\n        //       }, 1000);\n        // };\n\n\n\n\n\n// ...state, \n// cards:[\n//     ...state.cards,\n//     cards[index]:{\n//         ...state.cards[index],\n//         counter: \n//     }\n// ]\n\n// onCard={()=>{handleClick(index)}}\n\n\n// let sortedArray = [...originalArray].sort(compareFunction);\n\n// const [cardClicked, setCardClicked] = useState(cards);\n// const [pairs, setPairs] = useState(cards);\n// const [scoreinput, setScore] = useState(score);\n\n// state = {\n//     school: {\n//       name: \"Hogwarts\",\n//       house: {\n//         name: \"Ravenclaw\",\n//         points: 17\n//       }\n//     }\n//   }\n\n// // Two points for Ravenclaw\n// return {\n//   ...state, // copy the state (level 0)\n//   school: {\n//     ...state.school, // copy level 1\n//     house: {         // replace state.school.house...\n//       ...state.school.house, // copy existing house properties\n//       points: state.school.house.points + 2  // change a property\n//     }\n//   }\n// }","import axios from \"axios\";\n// return a new version of axios with useful settings applied\nexport default axios.create({\nbaseURL: \"https://pairs.developme.space/api/\", \n        headers: {\n            Accept: \"application/json\",\n        },\n});\n\n\n\n// import axios from \"axios\";\n// // return a new version of axios with useful settings applied\n// export default axios.create({\n// baseURL: \"http://homestead.test/api\", \n//         headers: {\n//             Accept: \"application/json\",\n//         },\n// });\n\n\n\n// baseURL: \"http://homestead.test/api\", params: {\n// key: \"b1a4b1a4b1a4-api-key-b1a4b1a4ab1a4\", },\n//     headers: {\n//         Accept: \"application/json\",\n// }, });","import axios from '../axios';\n\nexport const getData = () => (dispatch) =>{\n    axios.get(\"/cards\").then(({ data })=>{\n        \n        console.log(\"datafromapi\",data);\n\n        dispatch({\n            type:\"setCards\",\n            data: data.data,\n        })\n    });\n}\n\n\n// import axios from '../axios';\n\n\n// export const getData = () => (dispatch) => {\n//     axios.get(\"/\").then(({ data }) => {\n//         console.log(data); \n    \n//         dispatch ({\n//             type:\"SET_IMAGES\",\n//             images: data.data,\n//         })\n//     });\n// }","import { connect } from 'react-redux';\n\nimport CardsNew from './CardsNew';\n\nimport { shuffleCards, updateClick,updateScore } from '../../data/actions';\n\nimport { getData } from '../../data/actions/api'\n\nimport history from \"../../history\";\n\n\nconst mapStateToProps = (state) => {\n    \n    return {\n        // srcImage: state.images[(state.counter -1)].url,\n        cards:state.cards,\n        score:state.score,  \n        selectedOption:state.selectedOption,\n        playername:state.playername,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        \n        handleShuffle:(valueShuff)=>{\n            dispatch (shuffleCards(valueShuff))\n        },\n        handleCardClick:(valueC,valuePair,ValueS)=>{\n            dispatch (updateClick(valueC,valuePair,ValueS));\n        },\n\n        handleScore:(scoreVal)=>{\n            dispatch (updateScore(scoreVal))\n        },\n        getDataSet: () => {\n            dispatch(getData())\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CardsNew);\n\n// handleEndGame: scoreVal => {\n//     // dispatch the action\n//     dispatch (updateScore(scoreVal));\n//     // go to the homepage\n//     history.push(\"/endgame\"); \n// },\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React, { useState, Component, useEffect } from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport {reset} from '../../data/actions'\n\nconst mapStateToProps = ({cards,score,playername}) => {\n    \n    return {\n        // srcImage: state.images[(state.counter -1)].url,\n        cards:cards,\n        score:score,\n        playername:playername,\n    }\n\n}\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        handleReset: () => {\n            dispatch( reset() )\n        }\n    }\n}\n\n\nconst ScorePage =({cards,score,handleReset,playername}) => {\n\n    return (\n        <>\n        <section className=\"score-page\">\n            <div class=\"final-score-cont\">\n                <h1> Well Done <strong>{playername}</strong> </h1>\n                <h2> Your Score Is:</h2>\n                <div  className=\"score-sp\">{score}</div>\n            </div>\n            <br/>\n            <Link to=\"/\">\n            <button class= \"but-new-game\" onClick={handleReset}>New Game</button>\n            </Link>\n        </section>\n        </>\n    );\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ScorePage);\n","import React, { Component } from \"react\";\n\n\nclass Header extends Component {\n\n    render() {\n\n        return (\n            <>\n                <header className=\"main-header\">\n\n                    {/* <h4 className=\"main-title\">RPF developments presents...</h4> */}\n                    <h1 class=\"main-title\">Pair Challenge</h1>\n                    <h2 class=\"sub-main-title\">Lets get Pairing</h2>\n\n                </header>\n            </>\n        );\n    }\n}\nexport default Header;\n","import React, { Component } from \"react\";\n\n\nclass HeaderHome extends Component {\n\n    render() {\n\n        return (\n            <>\n                <header className=\"main-header\">\n\n                    {/* <h4 className=\"main-title\">RPF developments presents...</h4> */}\n                    <h1 class=\"main-title\">Pair Challenge</h1>\n                    <h2 class=\"sub-main-title\">Lets get Pairing</h2>\n\n                </header>\n            </>\n        );\n    }\n}\nexport default HeaderHome;\n","import React, { useState, Component, useEffect } from \"react\";\n\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport { Redirect } from 'react-router-dom';\n\nimport { updateDifficulty } from '../../data/actions';\n\nimport { updatePlayerName } from '../../data/actions';\n\nconst mapStateToProps = ({ cards, score, selectedOption, playername }) => {\n\n    return {\n        // srcImage: state.images[(state.counter -1)].url,\n        cards: cards,\n        score: score,\n        selectedOption: selectedOption,\n        playername: playername,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        handleOptionChange: (selectedDiff) => {\n            dispatch(updateDifficulty(selectedDiff))\n        },\n        handleFormSubmit: (valuePlayerName) => {\n            dispatch(updatePlayerName(valuePlayerName))\n        }\n    }\n}\n\n\n\nconst WelcomePage = ({\n    selectedOption,\n    handleOptionChange,\n    playername,\n    handleFormSubmit,\n}) => {\n\n    const [clicker, setClicker] = useState(0);\n\n    const updateClicker = () => setClicker(clicker + 1);\n\n    const [inputValueP, setInputValueP] = useState(playername);\n\n    const handlePlayerName = (e) => {\n        setInputValueP(e.currentTarget.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        handleFormSubmit(inputValueP);\n    }\n\n\n    return (\n        <>\n            <div class=\"welcome-cont-wrap\">\n                <section class=\"welcome-cont\">\n                    <picture class=\"rules-img\">\n                        <img src=\"https://cdn.dribbble.com/users/3473/screenshots/523945/pear.jpg\" />\n                    </picture>\n                    {clicker % 2 == 0 ?\n                        <div className=\"rules-cont\">\n                            <p class=\"rules-header\">How to play:</p>\n                            <ol>\n                                <li>1: Enter playername</li>\n                                <li>2: Select diffuclty of game</li>\n                                <li>3: Lift playing cards by clicking them</li>\n                                <li>4: Try to remember their locations</li>\n                                <li>5: Try lift all the pairs of cards before the time ends</li>\n                                <li>6: Have Fun</li>\n                            </ol>\n                            <button class=\"btn btn-outline-dark\" onClick={updateClicker}>Got It</button>\n                        </div>\n                        : <form class=\"welcome-form\" onSubmit={handleSubmit}>\n                            <div className=\"form-inputs-cont\">\n                                <div className=\"form-check\">\n                                    <p className=\"playername-label\">Player Name</p>\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter Player Name\"\n                                            name=\"playername\"\n                                            value={inputValueP}\n                                            onChange={handlePlayerName}\n                                            className=\"input-box\"\n                                        />\n                                </div>\n                                <div className=\"form-check\">\n                                    <label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"react-tips\"\n                                            value=\"easy\"\n                                            checked={selectedOption === \"easy\"}\n                                            onChange={(event) => handleOptionChange(event.target.value)}\n                                            className=\"form-check-input\"\n                                        />Easy\n                        </label>\n                                </div>\n\n                                <div className=\"form-check\">\n                                    <label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"react-tips\"\n                                            value=\"modest\"\n                                            checked={selectedOption === \"modest\"}\n                                            onChange={(event) => handleOptionChange(event.target.value)}\n                                            className=\"form-check-input\"\n                                        />Modest\n                        </label>\n                                </div>\n\n                                <div className=\"form-check\">\n                                    <label>\n                                        <input\n                                            type=\"radio\"\n                                            name=\"react-tips\"\n                                            value=\"hard\"\n                                            checked={selectedOption === \"hard\"}\n                                            onChange={(event) => handleOptionChange(event.target.value)}\n                                            className=\"form-check-input\"\n                                        /> Come and Get it!\n                        </label>\n                                </div>\n                            </div>\n                            <div className=\"form-button\">\n                                <button className=\"btn btn-outline-dark\" type=\"submit\" >Start Game</button>\n\n                                {playername.length > 2 ? <Redirect to=\"/game\" /> : null}\n                            </div>\n                        </form>\n                    }\n\n\n                </section>\n            </div>\n        </>\n    );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomePage);\n","import React, { Component } from \"react\";\n// import { Container, Navbar } from 'react-bootstrap';\n\n\n\nclass Footer extends Component {\n\n    render() {\n\n        return (\n            <>\n                <footer className=\"main-footer\">\n                <p class=\"footer-text\">Pair Challenge - Designed by Ross Ferreira &copy; 2020</p>\n                </footer>\n            </>\n        );\n    }\n}\nexport default Footer;","import React, { Fragment } from \"react\";\nimport { HashRouter as Router, Route,Switch } from \"react-router-dom\";\n\n// import { Router,Route } from \"react-router-dom\";\n\n// use Router instead of BrowserRouter\n\nimport '../../App.css';\nimport CardsNew from '../CardsNew';\nimport ScorePage from '../ScorePage';\nimport Header from '../Header';\nimport HeaderHome from '../HeaderHome';\nimport WelcomePage from '../WelcomePage';\nimport Footer from '../Footer';\n// import history from \"../src/history\";\n\nclass App extends React.Component{\n\n  // componentDidMount(){\n  //   this.props.getDataSet();\n  // }\n\n  render(){\n    return(\n      <Fragment>\n      <Router>\n        <Footer/>\n        <Route exact path=\"/\">\n          <HeaderHome/>\n          <WelcomePage/>\n        </Route>\n        <Route exact path=\"/game\">\n          <Header/>\n          <CardsNew/>\n        </Route>\n        <Route exact path=\"/endgame\">\n          <Header/>\n          <ScorePage/>\n        </Route>\n      </Router>\n    </Fragment>\n    )\n  }\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getData } from '../../data/actions/api'\n\n\nconst mapDispatchToProps = (dispatch) => {\n\n    return {\n        getDataSet: () => {\n            dispatch(getData())\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n","export default  {\n    tooManyClicks:false,\n    playername:\"\",\n    selectedOption: \"easy\",\n    score:0,\n    cards: [\n\n    ],\n}\n\n// {\n//     id: 1,\n//     name: \"birds\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/300000/velka/feathers-birds-vintage-art.jpg\",\n//     counter: false,\n// }, {\n//     id: 2,\n//     name: \"birds\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/300000/velka/feathers-birds-vintage-art.jpg\",\n//     counter: false,\n// },\n// {\n//     id: 3,\n//     name: \"clown\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/320000/velka/circus-clown-clip-art.jpg\",\n//     counter: false,\n// }, \n// {\n//     id: 4,\n//     name: \"clown\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/320000/velka/circus-clown-clip-art.jpg\",\n//     counter: false,\n// },\n// {\n//     id: 5,\n//     name: \"beatle\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/60000/velka/vintage-car-clipart.jpg\",\n//     counter: false,\n// }, {\n//     id: 6,\n//     name: \"beatle\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/60000/velka/vintage-car-clipart.jpg\",\n//     counter: false,\n// },\n// {\n//     id: 7,\n//     name: \"peru\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/310000/velka/peru-travel-poster.jpg\",\n//     counter: false,\n// }, \n// {\n//     id: 8,\n//     name: \"peru\",\n//     paired: false,\n//     url: \"https://www.publicdomainpictures.net/pictures/310000/velka/peru-travel-poster.jpg\",\n//     counter: false,\n// }\n\n","import initial from '../data/initial';\nimport { difficulty } from './actions';\n\nconst counterIncrease = state => ({ ...state, count: state.count + 1 });\n\n  const shuffle = (data) => {\n    let array = [...data]\n    for(let i = (array.length -1) ; i > 0; i--){\n        const j = Math.floor(Math.random() * i)\n        const temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n      }\n    return array\n};\n\nconst setQuestionsReducer = (state,{data}) => ({ ...state, cards: shuffle(data) })\n\n// const shuffleCards = (state,{arrayShuff}) => ({ ...state, cards: arrayShuff })\n\nconst clickUpdate = (state,{cardClick}) => ({ ...state, cards: cardClick })\n\nconst pairs = (state,{valuePair}) => ({ ...state, score: valuePair })\n\n// const scoreUpdate = (state,{scoreChange}) => ({ ...state, score: scoreChange })\n\nconst scoreIncr = (state,{scoreVal}) => ({ ...state, score: scoreVal })\n\nconst diffclty = (state,{selectedDiff}) => ({ ...state, selectedOption: selectedDiff })\n\nconst updPlyrNm = (state,{valuePlayerName}) => ({ ...state, playername: valuePlayerName })\n\nconst clickRchecker = state => ({ ...state, tooManyClicks: !state.tooManyClicks});\n\nexport default (state, action) => {\n  \n    switch (action.type) {\n        case \"INCREMENT\": return counterIncrease(state);\n        case \"setCards\": return setQuestionsReducer(state,action);\n        // case \"SHUFFLE\": return shuffleCards(state,action);\n        case \"CLICKSTATUS\": return pairs(clickUpdate(state,action),action);;\n        case \"SCOREUPDATE\": return scoreIncr(state,action);\n        case \"DIFFICULTY\": return diffclty(state,action);\n        case \"PLAYERNAME\": return updPlyrNm(state,action);\n        case \"CLICKERCHECKER\": return clickRchecker(state);\n        case \"RESET\": return initial;\n        default: return state;\n        }\n    };\nconsole.log(\"init\",initial)\n\n// const shuffleCards= state => ({...state, cards: state.cards.sort(() => Math.random() - 0.5)});\n\n    // const rootReducer = (state, action) => { if (action.type === 'RESET_APP') { \n    //     state = undefined;} \n    //         return appReducer(state, action);\n    //     }\n\n\n// const shuffle = (data) => {\n//     let arrShuff = [...data]\n//     arrShuff.sort(() => Math.random() - 0.5)\n//     return arrShuff\n// };\n\n\n// const cardStatus = (index) => {\n//     let newCards = [...state.cards];\n//     newCards[index].counter = !state.cards[index].counter;\n//     ({ cards: newCards });\n    \n// }\n\n// const updateScore= state => {\n//     let arr2=[];\n//     state.cards.filter((item,index)=>{\n//       if (item.paired == true){\n//                return arr2.push(item.paired);\n//               }\n//     });\n    \n//     let tot= (arr2.length / 2);\n//     ({ score: tot});\n// }\n\n\n\n// const shuffle = arr => arr.sort(() => Math.random() - 0.5);\n\n// const shuffleCards = (state) => ({ ...state, cards: shuffle(state.cards)})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport initial from '../data/initial';\nimport reducer from './reducer'; \nimport thunk from \"redux-thunk\";\n    \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  \n  export default createStore(\n      reducer, \n      initial,\n      composeEnhancers(applyMiddleware(thunk))\n  \n      );\n\n\n    // export default createStore(\n//     reducer,\n//     initial, \n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), \n//   );\n\n  // import { createStore,applyMiddleware,compose } from \"redux\";\n  // import initialState from './initialState';\n  // import reducer from './reducers/reducer';\n  // import thunk from \"redux-thunk\";","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport {Provider} from \"react-redux\";\n\nimport App from './components/App';\n\nimport store from './data/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}